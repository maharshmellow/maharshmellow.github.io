{"version":3,"sources":["components/Navbar.js","components/WelcomeMessage.js","components/TiledSection.js","data/Work.jsx","data/Projects.jsx","components/WorkDetailPage.js","components/ProjectDetailPage.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","Container_default","className","fluid","react_bootstrap_Navbar_default","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","id","Nav_default","Link","target","href","Component","WelcomeMessage","Row_default","Col_default","sm","Fade_default","left","distance","role","aria-label","delay","bottom","TiledSection","getTiles","tilesData","_this","props","tiles","forEach","tile","push","key","title","onClick","onTileClick","duration","this","workData","experiences","date","location","description","projectData","technologies","demoLink","githubLink","notice","WorkDetailPage","renderWorkDetails","workPositions","data","experience","xs","react_markdown_default","source","Modal_default","show","Body","md","ProjectDetailPage","renderNotice","HeadShake_default","count","renderTechnologies","map","technology","renderDemoLinks","renderProjectContents","escapeHtml","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openWorkDetailPage","pageData","setState","detailPageData","workDetailPageVisible","projectDetailPageVisible","window","history","pushState","onpopstate","e","closeDetailPage","openProjectDetailPage","state","top","components_Navbar","components_WelcomeMessage","Fragment","components_TiledSection","components_WorkDetailPage","components_ProjectDetailPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1137aedd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/Navbar.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport { default as BSNavbar} from \"react-bootstrap/Navbar\";\nimport { default as BSNav} from \"react-bootstrap/Nav\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container className=\"navbar-wrapper\" fluid={true}>\n        <BSNavbar collapseOnSelect expand=\"sm\">\n          <BSNavbar.Brand className=\"logo\">maharsh.</BSNavbar.Brand>\n          <BSNavbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <BSNavbar.Collapse id=\"responsive-navbar-nav\">\n            <BSNav className=\"mr-auto\"></BSNav>\n            <BSNav>\n              <BSNav.Link target=\"_blank\" href=\"http://www.github.com/maharshmellow\">Github</BSNav.Link>\n              <BSNav.Link target=\"_blank\" href=\"https://www.linkedin.com/in/maharshpatel/\">LinkedIn</BSNav.Link>\n              <BSNav.Link href=\"mailto:contact@maharsh.net\">Contact</BSNav.Link>\n            </BSNav>\n          </BSNavbar.Collapse>\n        </BSNavbar>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../styles/WelcomeMessage.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction WelcomeMessage() {\n  return (\n    <Container className=\"welcome-message\" fluid={true}>\n      <Row>\n        <Col sm={12}>\n          <Fade left distance=\"20px\">\n            <div>\n              Hey there <span role=\"img\" aria-label=\"wave\" id=\"wave\">👋</span>\n            </div>\n            <br/>\n          </Fade>\n          <Fade left distance=\"20px\" delay={700}>\n            I am Maharsh.\n          </Fade>\n          <Fade left distance=\"20px\" delay={1500}>\n            A Computing Science student based in Edmonton, Canada <br/>\n          </Fade>\n          <Fade bottom distance=\"50px\" delay={2500}>\n            <div>\n              <span id=\"check-out-message\">Check out my work below</span>\n            </div>\n          </Fade>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default WelcomeMessage;\n","import React, { Component } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport \"../styles/TiledSection.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nclass TiledSection extends Component {\n\n  getTiles = () => {\n    const tilesData = this.props.tilesData;\n    var tiles = [];\n    tilesData.forEach(tile => {\n      tiles.push(\n        <Col sm={4} className={\"tile\"} key={tile.title}>\n          <button onClick={() => this.props.onTileClick(tile)} className=\"tile-button\">{tile.title}</button>\n        </Col>\n      );\n    });\n\n    return tiles;\n  }\n\n  render() {\n    return (\n      <Container className=\"tiled-section\" fluid={true}>\n        <Fade bottom duration={1000} distance=\"50px\" delay={100}>\n          <Row>\n            <Col sm={4} className=\"section-title\">  \n              {this.props.title}\n            </Col>\n          </Row>\n        </Fade>\n        <Fade bottom duration={1000} distance=\"50px\" delay={100}>\n          <Row className={\"tiles\"}>\n            {\n              this.getTiles()\n            }\n          </Row>\n        </Fade>\n      </Container>\n    );\n  }\n}\n\nexport default TiledSection;\n","const workData = [\n    {\n        title: \"Google\",\n        experiences: [\n            {\n                title: \"Software Engineering Intern\",\n                date: \"May '19 - Aug '19\",\n                location: \"Los Angeles, CA\",\n                description: \"## - Worked with Java to implement a debugging toolkit for Google Drive batch processes \\n ## - Designed and developed a system that allowed data from thousands of live processes to be organized in a central location, leading to an enhanced developer experience and a higher confidence in the reliability of the batch processing framework \\n ## - Created a pipeline to identify and remove files with missing metadata across all Google Drive accounts\"\n            },\n            {\n                title: \"Software Engineering Intern\",\n                date: \"Mar '18 - Jun '18\",\n                location: \"Mountain View, CA\",\n                description: \"## - Applied Machine Learning models to enable Human Computer Interaction on a future product \\n ## - Worked with C++ and Tensorflow to extract body keypoints from a live input stream, and enabled low latency, real-time analysis using ML accelerators \\n ## - Used Typescript to create a canvas game to demonstrate the high accuracy and low latency interaction that the internship project can enable\"\n            }\n        ]\n    },\n    {\n        title: \"Intuit\",\n        experiences: [\n            {\n                title: \"Software Developer Co-op\",\n                date: \"Jun '18 - Apr '19\",\n                location: \"Edmonton, AB\",\n                description: \"## - Worked with React to develop smoother on-boarding experiences for ~5 million Quickbooks Online customers \\n ## - Designed and implemented an in-product phone collection dialog to increase the security profile of every 1 in 10 at-risk customers \\n ## - Developed an in-product password verification system to protect access to pages containing sensitive data \\n ## - Ran and managed A/B tests on live customers for a variety of feature experiments\"\n            }\n        ]\n    },\n    {\n        title: \"University of Alberta\",\n        experiences: [\n            {\n                title: \"Research Assistant\",\n                date: \"Sep '17 - Mar '18\",\n                location: \"Edmonton, AB\",\n                description: \"## - Worked with an interdisciplinary team to convert the Basic Concepts Classification into Linked Open Data using Python\"\n            },\n            {\n                title: \"Metadata Assistant\",\n                date: \"May '17 - Sep '17\",\n                location: \"Edmonton, AB\",\n                description: \"## - Created a Django web application that Universities across Canada will use to convert their library metadata into Linked Data \\n ## - Created a SPARQL endpoint to query the Library of Congress and University metadata \\n ## - Gained experience with Linked Data, MARC, SPARQL, RDF, Apache Jena Fuseki, and Virtuoso\"\n            },\n            {\n                title: \"Summer Research Intern\",\n                date: \"Jun '14 - Aug '14\",\n                location: \"Edmonton, AB\",\n                description: \"## - Programmed a joystick to control an iRobot Create’s motion using Python and C \\n ## - Implemented and modified existing reinforcement learning algorithms \\n ## - Successfully made a robot predict its future collision in the test environment\"\n            }\n        ]\n    }\n];\n\nexport default workData;\n","const projectData = [\n    {\n        title: \"Castroom\",\n        description: '## Castroom is a Podcast Search Engine. It gathers data using a distributed crawler mechanism running on Google Kubernetes Engine and then saves the results to Amazon Elasticsearch service. A React app presents a Search UI where ~250k podcasts can be searched. Currently, it only searches by podcast names but in the future, I would like to index all episodes (including descriptions) and create some type of alert mechanism where users can be alerted if a specified word appears in a podcast.  <img width=\"100%\" alt=\"Search Engine Image\" src=\"https://user-images.githubusercontent.com/4590693/72404218-c4908a00-3711-11ea-9bd1-c3c6a1bbb4c5.png\"><img width=\"100%\" alt=\"Results Image\" src=\"https://user-images.githubusercontent.com/4590693/72404219-c4908a00-3711-11ea-87ea-762630172249.png\">',\n        technologies: [\"Google Kubernetes Engine\", \"Amazon Elasticsearch Service\", \"Amazon Simple Queue Service\", \"Firebase Hosting\", \"Heroku\", \"Docker\", \"React\", \"Node.js\", \"LevelDB\", \"Datadog\"],\n        demoLink: \"https://castroom.web.app\",\n        githubLink: \"http://www.github.com/maharshmellow/castroom\"\n    },\n    {\n        title: \"Do\",\n        description: '## Do is a modern and minimal, but fully-functional task manager. Here is a sneak peek:<iframe style=\"border: none;\" width=\"100%\" height=\"450\" src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FEq44mWsD2M8pc5rvuOAZb9Eb%2FDo%3Fnode-id%3D0%253A1\" allowfullscreen></iframe>',\n        technologies: [\"React Native\", \"Firestore\", \"Firebase Authentication\", \"OneSignal\"],\n        notice: \"This project is still under development.\"\n    },\n    {\n        title: \"Live Transit\",\n        description: \"## Shows the live location of all the Edmonton Transit System Busses and their estimated arrival times at all stops on the trip.\",\n        technologies: [\"Flask\", \"Google Transit\", \"Google Maps\", \"Edmonton Open Data APIs\"],\n        demoLink: \"https://transit.maharsh.net\",\n        githubLink: \"http://www.github.com/maharshmellow/livetransit\"\n    },\n    {\n        title: \"Trakr\",\n        description: \"## Trakr is a web application that keeps track of other websites and notifies the user by email if a change is detected. This could be used for job posting pages, scholarship pages, or anything that the user doesn't want to keep checking. Ex: when a new job posting is added, it would email the user saying that there was an update on the website.\",\n        technologies: [\"Django\", \"Amazon DynamoDB\", \"Firebase Authentication\", \"SendGrid\"],\n        demoLink: \"https://trakr.maharsh.net\",\n        githubLink: \"http://www.github.com/maharshmellow/trakr\"\n    },\n    {\n        title: \"Group Study\",\n        description: \"## Group Study is a study timer. But unlike most other popular tomato timer apps, this allows multiple browsers to sync. The timer is synced between all connected users, and when one person pauses/plays/skips, it does that action on all connected browsers using sockets.\",\n        technologies: [\"Flask\", \"SocketIO\", \"Heroku\"],\n        demoLink: \"https://study.maharsh.net\",\n        githubLink: \"https://github.com/maharshmellow/groupstudy\"\n    },\n    {\n        title: \"Weather Tracker\",\n        description: \"## Simple weather application with a city search and a map. Made primarily to learn Go.\",\n        technologies: [\"Go\", \"OpenWeatherMap\", \"Google Maps\"],\n        demoLink: \"https://weather.maharsh.net\",\n        githubLink: \"https://github.com/maharshmellow/weather\"\n    },\n    {\n        title: \"CanLink Project\",\n        description: \"## A website created for the Canadian Linked Data Initiative that converts Library Metadata into Linked Data. This project will be used by University Libraries across Canada to convert their data into Linked Data and to help uncover relationships between data that were previously hard to find.\",\n        technologies: [\"Django\", \"PyMarc\", \"RDFLib\", \"Apache Jena Fuseki\", \"SPARQL\"],\n        githubLink: \"https://github.com/cldi/CanLink\",\n    },\n    {\n        title: \"Property Searcher\",\n        description: \"## Shows the property values and other information of all Edmonton properties.\",\n        technologies: [\"Django\", \"Edmonton Open Data APIs\"],\n        notice: \"The data used for this project has not been updated since 2017.\",\n        demoLink: \"https://properties.maharsh.net/\",\n        githubLink: \"https://www.github.com/maharshmellow/edmonton-property-search\"\n    },\n    {\n        title: \"URL Shortener\",\n        description: \"## A Simple URL Shortener made in ~1 Hour as a challenge against a friend.\",\n        technologies: [\"Flask\", \"MongoDB\"],\n        demoLink: \"https://url.maharsh.net\",\n        githubLink: \"https://github.com/maharshmellow/urlshortener\"\n    },\n    {\n        title: \"SMS Verifier\",\n        description: \"## A Simple Demo of SMS verification. It asks for your phone number and then asks for the verification code that you received.\",\n        notice: \"The country code (1 for Canada/US) needs to be added for the demo to work.\",\n        technologies: [\"Django\", \"Till API\"],\n        demoLink: \"https://sms.maharsh.net/\",\n        githubLink: \"https://github.com/maharshmellow/sms-verify\"\n    },\n    {\n        title: \"Sprintr\",\n        description: \"## A website that allows a user to upload a book and read it using a Rapid Serial Visual Representation Method similar to the one offered by Spritz Inc. The book can be imported in most popular book formats like EPUB and MOBI.\",\n        notice: \"Due to a chrome update breaking the changes, the live demo is no longer active. There is however a gif of the app in action in the Github repo.\",\n        githubLink: \"https://github.com/maharshmellow/sprintr\"\n    },\n\n];\n\nexport default projectData;\n","import React, { Component } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport \"../styles/DetailPage.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ReactMarkdown from \"react-markdown\";\nimport Modal from \"react-bootstrap/Modal\";\n\nclass WorkDetailPage extends Component {\n\n  renderWorkDetails = () => {\n    var workPositions = [];\n\n    this.props.data.experiences.forEach(experience => {\n      workPositions.push(\n        <Fade bottom distance=\"20px\" key={experience.date}>\n          <div>\n            <Row className=\"experience-heading\">\n              <Col xs={7}>\n                <div className=\"title\">{experience.title}</div>\n              </Col>\n              <Col xs={5}>\n                <div className=\"date\">{experience.date}</div>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={7}>\n                <div className=\"location\">{experience.location}</div>\n              </Col>\n              <Col xs={5}></Col>\n            </Row>\n\n            <Row>\n              <Col xs={12}>\n                <div className=\"workDescription\">\n                  <ReactMarkdown source={experience.description}/>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Fade>\n        )\n    });\n\n    return workPositions;\n  }\n\n\n  render() {\n    let title = \"\";\n    if (this.props.data && this.props.data.title) {\n      title = this.props.data.title;\n    }\n\n    return (\n      <Modal show={this.props.show} className=\"details-modal\">\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col sm={12} md={12} className=\"page-contents\">\n                <Fade left distance=\"40px\">\n                  <Row>\n                    <Col xs={10} className=\"page-title\">{title}</Col>\n                    <Col xs={2} className=\"close-button-wrapper\" />\n                  </Row>\n                </Fade>\n                {\n                  this.props.show ?\n                    this.renderWorkDetails()\n                  : null\n                }\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default WorkDetailPage;\n","import React, { Component } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport HeadShake from \"react-reveal/HeadShake\";\nimport \"../styles/DetailPage.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ReactMarkdown from \"react-markdown\";\nimport Modal from \"react-bootstrap/Modal\";\n\nclass ProjectDetailPage extends Component {\n\n  renderNotice = () => {\n    if (this.props.data.notice) {\n      return (\n        <Fade bottom distance=\"20px\">\n          <HeadShake delay={500} count={3}>\n            <Row>\n              <div className=\"notice\">{this.props.data.notice}</div>\n            </Row>\n          </HeadShake>\n        </Fade>\n      );\n    } \n  }\n\n  renderTechnologies = () => {\n    if (this.props.data.technologies) {\n      return (\n        <div className=\"technologies subsection\">\n          <h1>Technologies</h1>\n          <div className=\"technologyPillContainer\">\n            {\n              this.props.data.technologies.map(technology => {\n                return <div className=\"technologyPill\" key={technology}>{technology}</div>\n              })\n            }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  renderDemoLinks = () => {\n    if (this.props.data.demoLink || this.props.data.githubLink) {\n      return(\n        <div className=\"view subsection\">\n          <h1>View</h1>\n          <div className=\"viewButtonContainer\">\n            {\n              this.props.data.demoLink ?\n              <a href={this.props.data.demoLink}><button className=\"pillButton\">Demo</button><br/></a> \n              : null\n            }\n            {\n              this.props.data.githubLink ?\n                <a href={this.props.data.githubLink}><button className=\"pillButton\">Github</button></a>\n              : null\n            }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  renderProjectContents = () => {\n    return (\n      <div>\n        {this.renderNotice()}\n        <Fade bottom distance=\"20px\">\n          <Row>\n            <div className=\"subsection\">\n              <h1>Description</h1>\n              <ReactMarkdown source={this.props.data.description} escapeHtml={false}/>\n            </div>\n          </Row>\n          <Row>\n            {this.renderTechnologies()}\n          </Row>\n          <Row>\n            {this.renderDemoLinks()}\n          </Row>\n        </Fade>\n      </div>\n    )\n  }\n\n  render() {\n    let title = \"\";\n    if (this.props.data && this.props.data.title) {\n      title = this.props.data.title;\n    }\n\n    return (\n      <Modal show={this.props.show} className=\"details-modal\">\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col sm={12} md={12} className=\"page-contents\">\n                <Fade left distance=\"40px\">\n                  <Row>\n                    <Col xs={10} className=\"page-title\">{title}</Col>\n                    <Col xs={2} className=\"close-button-wrapper\" />\n                  </Row>\n                </Fade>\n                {\n                  this.props.show ?\n                    this.renderProjectContents()\n                  : null\n                }\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ProjectDetailPage;\n","import React, { Component } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport \"../styles/App.scss\";\nimport Navbar from \"./Navbar\";\nimport WelcomeMessage from \"./WelcomeMessage\";\nimport TiledSection from \"./TiledSection\"\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport workData from \"../data/Work\";\nimport projectData from \"../data/Projects\";\nimport WorkDetailPage from \"./WorkDetailPage\";\nimport ProjectDetailPage from \"./ProjectDetailPage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailPageData: null,\n      workDetailPageVisible: false,\n      projectDetailPageVisible: false,\n    }\n  }\n\n  openWorkDetailPage = (pageData) => {\n    this.setState({\n      detailPageData: pageData,\n      workDetailPageVisible: true,\n      projectDetailPageVisible: false,\n    });\n    \n    window.history.pushState({}, \"\", `/`);  \n    window.onpopstate = (e) => {\n      this.closeDetailPage();\n    }\n\n  }\n\n  openProjectDetailPage = (pageData) => {\n    this.setState({\n      detailPageData: pageData,\n      workDetailPageVisible: false,\n      projectDetailPageVisible: true,\n    });\n    \n    window.history.pushState({}, \"\", `/`);  \n    window.onpopstate = (e) => {\n      this.closeDetailPage();\n    }\n  }\n\n  closeDetailPage = () => {\n    this.setState({\n      detailPageData: null,\n      workDetailPageVisible: false,\n      projectDetailPageVisible: false\n    })\n  }\n\n  render() {\n    return (\n      <Container className=\"website\">\n        <Fade top duration={1000} distance=\"50px\" delay={2500}>\n          <Row>\n            <Navbar/>\n          </Row>\n        </Fade>\n        <Row>\n          <WelcomeMessage/>\n        </Row>\n        <Fade bottom duration={1000} distance=\"50px\" delay={2500}>\n          <>\n            <Row>\n              <TiledSection title=\"work.\" tilesData={workData} onTileClick={this.openWorkDetailPage}/>\n            </Row>\n            <Row>\n              <TiledSection title=\"projects.\" tilesData={projectData} onTileClick={this.openProjectDetailPage}/>\n            </Row>\n          </>\n        </Fade>\n        <WorkDetailPage show={this.state.workDetailPageVisible} data={this.state.detailPageData} />\n        <ProjectDetailPage show={this.state.projectDetailPageVisible} data={this.state.detailPageData} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}